apiVersion: argoproj.io/v1alpha1
kind: ArgoCD
metadata:
  name: openshift-gitops
  namespace: openshift-gitops
  annotations:
    argocd.argoproj.io/sync-options: ServerSideApply=true,Validate=false
    argocd.argoproj.io/sync-wave: '10'
spec:
{{ if .Values.gitops.applicationControllerResources }}
  controller:
    resources:
{{ toYaml .Values.gitops.applicationControllerResources | indent 6 }}
{{ end }}
{{ if .Values.gitops.kustomizeBuildOptions }}
  kustomizeBuildOptions: {{ .Values.gitops.kustomizeBuildOptions }}
{{end}}
  resourceTrackingMethod: annotation
  resourceIgnoreDifferences:
    resourceIdentifiers:
    - group: metal3.io
      kind: BareMetalHost
      customization:
        jsonPointers:
        - /spec/online
  resourceExclusions: |
    - apiGroups:
      - tekton.dev
      clusters:
      - '*'
      kinds:
      - TaskRun
      - PipelineRun
    - apiGroups:
      - internal.open-cluster-management.io
      clusters:
      - '*'
      kinds:
      - ManagedClusterInfo
  resourceCustomizations: |
    operators.coreos.com/Subscription:
      health.lua: |
        health_status = {}
        if obj.status ~= nil then
          if obj.status.conditions ~= nil then
            numDegraded = 0
            numPending = 0
            msg = ""
            for i, condition in pairs(obj.status.conditions) do
              msg = msg .. i .. ": " .. condition.type .. " | " .. condition.status .. "\n"
              if condition.type == "InstallPlanPending" and condition.status == "True" then
                numPending = numPending + 1
              elseif (condition.type == "InstallPlanMissing" and condition.reason ~= "ReferencedInstallPlanNotFound") then
                numDegraded = numDegraded + 1
              elseif (condition.type == "CatalogSourcesUnhealthy" or condition.type == "InstallPlanFailed" or condition.type == "ResolutionFailed") and condition.status == "True" then
                numDegraded = numDegraded + 1
              end
            end
            if numDegraded == 0 and numPending == 0 then
              health_status.status = "Healthy"
              health_status.message = msg
              return health_status
            elseif numPending > 0 and numDegraded == 0 then
              health_status.status = "Progressing"
              health_status.message = "An install plan for a subscription is pending installation"
              return health_status
            else
              health_status.status = "Degraded"
              health_status.message = msg
              return health_status
            end
          end
        end
        health_status.status = "Progressing"
        health_status.message = "An install plan for a subscription is pending installation"
        return health_status
  rbac:
    policy: |
      g, system:cluster-admins, role:admin
      g, cluster-admins, role:admin
      g, global-admins, role:admin
    scopes: '[groups]'
  server:
    insecure: true
    route:
      enabled: true
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
  sso:
    provider: dex
    dex:
      openShiftOAuth: true
